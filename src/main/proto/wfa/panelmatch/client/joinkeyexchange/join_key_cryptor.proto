// Copyright 2021 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.panelmatch.client.joinkeyexchange;

import "wfa/panelmatch/client/joinkeyexchange/join_key.proto";

option java_package = "org.wfanet.panelmatch.client.joinkeyexchange";
option java_multiple_files = true;

// Request to Generate Key
message JoinKeyCryptorGenerateCipherKeyRequest {}

// Response to Generate Key
message JoinKeyCryptorGenerateCipherKeyResponse {
  bytes key = 1;
}

// The request to encrypt.
message JoinKeyCryptorEncryptRequest {
  repeated JoinKeyAndId plaintext_join_key_and_ids = 1;
  bytes encryption_key = 2;
}

// Response of the JoinKeyCryptorEncryptRequest method.
message JoinKeyCryptorEncryptResponse {
  repeated JoinKeyAndId encrypted_join_key_and_ids = 1;
}

// The request to reencrypt.
message JoinKeyCryptorReEncryptRequest {
  repeated JoinKeyAndId encrypted_join_key_and_ids = 1;
  bytes encryption_key = 2;
}

// Response of the JoinKeyCryptorReEncryptRequest method.
message JoinKeyCryptorReEncryptResponse {
  repeated JoinKeyAndId encrypted_join_key_and_ids = 1;
}

// The request to decrypt.
message JoinKeyCryptorDecryptRequest {
  repeated JoinKeyAndId encrypted_join_key_and_ids = 1;
  bytes encryption_key = 2;
}

// Response of the JoinKeyCryptorEncryptRequest method.
message JoinKeyCryptorDecryptResponse {
  repeated JoinKeyAndId decrypted_join_key_and_ids = 1;
}
