load("@rules_cc//cc:defs.bzl", "cc_library")

package(default_visibility = ["//visibility:public"])

_INCLUDE_PREFIX = "/src/main/cc"

cc_library(
    name = "aes",
    hdrs = [
        "aes.h",
    ],
    strip_include_prefix = _INCLUDE_PREFIX,
    deps = [
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "encryption_utility_helper",
    hdrs = [
        "encryption_utility_helper.h",
    ],
    strip_include_prefix = _INCLUDE_PREFIX,
    deps = [
        "@com_google_absl//absl/status:statusor",
    ],
)

cc_library(
    name = "cryptor",
    srcs = [
        "cryptor.cc",
    ],
    hdrs = [
        "cryptor.h",
    ],
    strip_include_prefix = _INCLUDE_PREFIX,
    deps = [
        "//src/main/cc/wfanet/panelmatch/common:macros",
        "@com_google_private_join_and_compute//crypto:ec_commutative_cipher",
        "@com_google_private_join_and_compute//util:status_includes",
    ],
)

cc_library(
    name = "encrypt_identifier",
    hdrs = [
        "encrypt_identifier.h",
    ],
    strip_include_prefix = _INCLUDE_PREFIX,
    deps = [
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "encrypt_payload",
    hdrs = [
        "encrypt_payload.h",
    ],
    strip_include_prefix = _INCLUDE_PREFIX,
    deps = [
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "fingerprinter",
    hdrs = [
        "fingerprinter.h",
    ],
    strip_include_prefix = _INCLUDE_PREFIX,
    deps = [
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "generate_hashkey",
    hdrs = [
        "generate_hashkey.h",
    ],
    strip_include_prefix = _INCLUDE_PREFIX,
    deps = [
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "hkdf",
    hdrs = [
        "hkdf.h",
    ],
    strip_include_prefix = _INCLUDE_PREFIX,
    deps = [
        "@com_google_absl//absl/status:statusor",
        "@tink_base//cc/util:secret_data",
    ],
)
