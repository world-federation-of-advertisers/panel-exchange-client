load("@io_bazel_rules_kotlin//kotlin:jvm.bzl", "kt_jvm_library")
load("@rules_jvm_external//:defs.bzl", "java_export")

package(default_visibility = [
    "//src/main/kotlin/org/wfanet/panelmatch:__subpackages__",
    "//src/test/kotlin/org/wfanet/panelmatch:__subpackages__",
])

kt_jvm_library(
    name = "deploy",
    srcs = glob(["*.kt"]),
    deps = [
        "//src/main/kotlin/org/wfanet/panelmatch/client/common",
        "//src/main/kotlin/org/wfanet/panelmatch/client/common/compression",
        "//src/main/kotlin/org/wfanet/panelmatch/client/eventpreprocessing",
        "//src/main/kotlin/org/wfanet/panelmatch/client/exchangetasks",
        "//src/main/kotlin/org/wfanet/panelmatch/client/launcher",
        "//src/main/kotlin/org/wfanet/panelmatch/client/privatemembership",
        "//src/main/kotlin/org/wfanet/panelmatch/client/storage",
        "//src/main/kotlin/org/wfanet/panelmatch/common",
        "//src/main/kotlin/org/wfanet/panelmatch/common/certificates",
        "//src/main/kotlin/org/wfanet/panelmatch/common/crypto",
        "//src/main/kotlin/org/wfanet/panelmatch/common/secrets",
        "//src/main/kotlin/org/wfanet/panelmatch/common/storage",
        "//src/main/proto/wfa/measurement/api/v2alpha:certificates_service_kt_jvm_grpc",
        "//src/main/proto/wfa/measurement/api/v2alpha:exchange_step_attempts_service_kt_jvm_grpc",
        "//src/main/proto/wfa/measurement/api/v2alpha:exchange_steps_service_kt_jvm_grpc",
        "//src/main/proto/wfa/measurement/api/v2alpha:exchange_workflow_kt_jvm_proto",
        "//src/main/proto/wfa/panelmatch/client/storage:storage_details_kt_jvm_proto",
        "@wfa_common_jvm//imports/java/picocli",
        "@wfa_common_jvm//imports/kotlin/kotlinx/coroutines:core",
        "@wfa_common_jvm//src/main/kotlin/org/wfanet/measurement/common",
        "@wfa_common_jvm//src/main/kotlin/org/wfanet/measurement/common/crypto:signing_certs",
        "@wfa_common_jvm//src/main/kotlin/org/wfanet/measurement/common/crypto/tink",
        "@wfa_common_jvm//src/main/kotlin/org/wfanet/measurement/common/grpc",
        "@wfa_common_jvm//src/main/kotlin/org/wfanet/measurement/common/throttler",
        "@wfa_common_jvm//src/main/kotlin/org/wfanet/measurement/storage:client",
    ],
)

java_library(
    name = "provided_deps",
    runtime_deps = [
        # com.google.protobuf:protobuf-java
        "@com_google_protobuf//:protobuf_java",
        # com.google.cloud:google-cloud-core
        "@wfa_common_jvm//imports/java/com/google/cloud:core",
        # com.google.cloud:google-cloud-core-grpc
        "@wfa_common_jvm//imports/java/com/google/cloud/grpc",
        # com.google.cloud:google-cloud-spanner
        "@wfa_common_jvm//imports/java/com/google/cloud/spanner",
        # com.google.cloud:google-cloud-storage
        "@wfa_common_jvm//imports/java/com/google/cloud/storage",
        # com.google.code.gson:gson
        "@wfa_common_jvm//imports/java/com/google/code/gson",
        # com.google:truth
        "@wfa_common_jvm//imports/java/com/google/common/truth",
        # com.google.protobuf:protobuf-java
        "@wfa_common_jvm//imports/java/com/google/protobuf",
        # com.google.protobuf:protobuf-java-util
        "@wfa_common_jvm//imports/java/com/google/protobuf/util",
        # io.grpc:grpc-api
        "@wfa_common_jvm//imports/java/io/grpc:api",
        "@wfa_common_jvm//imports/java/io/grpc:context",
        # io.grpc:grpc-core
        "@wfa_common_jvm//imports/java/io/grpc/core:util",
        "@wfa_common_jvm//imports/java/io/grpc/inprocess",
        # io.grpc:grpc-netty
        "@wfa_common_jvm//imports/java/io/grpc/netty",
        # io.grpc:grpc-services
        "@wfa_common_jvm//imports/java/io/grpc/services:health",
        # io.grpc:grpc-kotlin-stub
        "@wfa_common_jvm//imports/java/io/grpc/stub",
        "@wfa_common_jvm//imports/kotlin/io/grpc/health/v1:health_kt_jvm_grpc",
        # org.jetbrains.kotlin:stdlib-jdk7
        "@wfa_common_jvm//imports/kotlin/kotlin:stdlib_jdk7",
        # org.jetbrains.kotlin:kotlin-reflect
        "@wfa_common_jvm//imports/kotlin/kotlin/reflect/jvm",
        # org.jetbrains.kotlin:kotlin-test
        "@wfa_common_jvm//imports/kotlin/kotlin/test",
    ],
)

java_export(
    name = "maven",
    deploy_env = [
        ":provided_deps",
    ],
    maven_coordinates = "org.wfanet:panel-exchange-client-core:${TAG_NAME}",
    pom_template = "//deploy:pom_template.xml",
    tags = ["no-javadocs"],
    runtime_deps = [
        ":deploy",
    ],
)
